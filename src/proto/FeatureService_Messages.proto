syntax = "proto3";
option java_package="org.osgeo.mapguide";
package OSGeo.MapGuide;

import "MdfCommon.proto";
import "Common.proto";
import "Fdo.proto";

// An operation request to create a Feature Source
message CreateFeatureSourceRequest {
    // The FDO provider
    string provider = 1;
    // The file name
    string file_name = 2;
    // The FDO Feature Schema to apply
    FeatureSchema schema = 3;
    // The spatial context to apply
    SpatialContext spatial_context = 4;
}

// An operation request to apply a FDO Feature Schema to a given Feature Source
message ApplySchemaRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The FDO Feature Schema to apply
    FeatureSchema schema = 2;
}

// An operation request to begin a transaction on a Feature Source
message BeginTransactionRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
}

// An operation response for a BeginTransaction operation
message BeginTransactionResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    TransactionRef result = 2;
}

// An operation request to delete features from a Feature Source
message DeleteFeaturesRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The FDO class name
    string class_name = 2;
    // The FDO filter to delete features
    // NOTE: This is not an actual SQL WHERE clause. This string will be parsed into an FDO filter expression
    // tree before query proecssing.
    string filter = 3;
    // An optional transaction reference
    TransactionRef transaction = 4;
}

// An operation response for a DeleteFeatures operation
message DeleteFeaturesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    int32 result = 2;
}

// An operation request to describe the structure of a Feature Source
message DescribeSchemaRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The name of the FDO schema
    string schema_name = 2;
    // An optional collection of class names to filter down
    StringCollection class_names = 3;
}

// An operation response for a DescribeSchema operation
message DescribeSchemaResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    repeated FeatureSchema result = 2;
}

// An operation request to enumerate the data stores for a FDO provider
message EnumerateDataStoresRequest {
    // The FDO provider
    string provider = 1;
    // The FDO connection string
    string connection_string = 2;
}

// An operation response for a EnumerateDataStores operation
message EnumerateDataStoresResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    StringCollection result = 2;
}

// An operation request to execute non-query SQL for a SQL-supporting FDO provider
message ExecuteSqlNonQueryRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The SQL command
    string sql = 2;
    // A collection of SQL parameter
    ParameterCollection parameters = 3;
    // An optional transaction reference
    TransactionRef transaction = 4;
}

// An operation response for a ExecuteSqlNonQuery operation
message ExecuteSqlNonQueryResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    int32 result = 2;
}

// An operation request to execute query SQL for a SQL-supporting FDO provider
message ExecuteSqlQueryRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The SQL command
    string sql = 2;
    // A collection of SQL parameter
    ParameterCollection parameters = 3;
    // An optional transaction reference
    TransactionRef transaction = 4;
}

// An operation request to get the capabilities of a FDO provider
message GetCapabilitiesRequest {
    // The FDO provider
    string provider = 1;
    // An optional FDO connection string
    string connection_string = 2;
}

// An operation response for a GetCapabilities operation
message GetCapabilitiesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    ProviderCapabilities result = 2;
}

// An operation request to get a class definition from a Feature Source
message GetClassDefinitionRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The FDO schema name
    string schema_name = 2;
    // The FDO class name
    string class_name = 3;
}

// An operation response from a GetClassDefinition request
message GetClassDefinitionResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    ClassDefinition result = 2;
}

// An operation request to list the class names for a FDO schema in a Feature Source
message GetClassesRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
    // The FDO schema name
    string schema_name = 2;
}

// An operation response from a GetClasses request
message GetClassesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    StringCollection result = 2;
}

// An operation request to list the available values for a FDO connection property
message GetConnectionPropertyValuesRequest {
    // The FDO provider
    string provider = 1;
    // The connection property name
    string property_name = 2;
    // The connection string
    string connection_string = 3;
}

// An operation response for a GetConnectionPropertyValues request
message GetConnectionPropertyValuesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    StringCollection result = 2;
}

// An operation request to get the installed FDO providers
message GetFeatureProvidersRequest {

}

// An operation response for a GetFeatureProviders request
message GetFeatureProvidersResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    repeated ProviderInfo result = 2;
}

// An operation request to get query locked features from a Feature Source
message GetLockedFeaturesRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
    // The FDO class name
    string class_name = 2;
    // The query options
    FeatureQueryOptions options = 3;
}

// An operation request to get long transactions from a Feature Source
message GetLongTransactionsRequest {

}

// An operation response for a GetLongTransactions request
message GetLongTransactionsResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    repeated StringCollection result = 2;
}

// An operation request all of the logical to physical schema mappings for the
// specified provider and partial connection string
message GetSchemaMappingRequest {
    // The FDO provider
    string provider = 1;
    // The partial or full connection string
    string connection_string = 2;
}

// An operation response for a GetSchemaMapping request
message GetSchemaMappingResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    DataStoreConfiguration result = 2;
}

// An operation request to list the names of all schemas for Feature Source
message GetSchemasRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
}

// An operation response for a GetSchemas request
message GetSchemasResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    StringCollection result = 2;
}

// An operation request to list all spatial contexts for a Feature Source
message GetSpatialContextsRequest {
    // The Feature Source ID
    ResourceIdentifier feature_source = 1;
}

// An operation response for a GetSpatialContext request
message GetSpatialContextsResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    repeated SpatialContext result = 2;
}

// Describes the type of extent for spatial contexts
enum SpatialContextExtentType {
    // The extent is static
    Static = 0;
    // The extent is dynamic
    Dynamic = 1;
}

// Describes a spatial context
message SpatialContext {
    // The name of the spatial context
    string name = 1;
    // The coordinate system name of the spatial context
    string coordinate_system = 2;
    // The coordinate system WKT of the spatial context
    string coordinate_system_wkt = 3;
    // The description of the spatial context
    string description = 4;
    // The bounding box of the spatial context
    MdfModel.Envelope extent = 5;
    // The bounding box extent type
    SpatialContextExtentType extent_type = 6;
    // The X/Y coordinate tolerance
    double xy_tolerance = 7;
    // The Z coordinate tolerance
    double z_tolerance = 8;
}

// An operation to insert features into a Feature Source
message InsertFeaturesRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
}

// An operation result for a InsertFeatures request
message InsertFeaturesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    repeated FeatureRecord result = 2;
}

// An operation request to query features in an aggregated manner from a Feature Source
message SelectAggregateRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
    // The FDO class name
    string class_name = 2;
    // The query options
    AggregateQueryOptions options = 3;
}

// An operation request to query features from a Feature Source
message SelectFeaturesRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
    // The FDO class name
    string class_name = 2;
    // The query options
    FeatureQueryOptions options = 3;
}

// An operation request to set the active long transaction of a Feature Source that supports long transactions
message SetLongTransactionRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
    // The long transaction name
    string name = 2;
}

// An operation request to test whether a given Feature Source can be connected to
message TestConnectionRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
}

// An operation response for a TestConnection operation
message TestConnectionResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    bool result = 2;
}

// An operation request to run a series of feature manipulation commands on a Feature Source
message UpdateFeaturesRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
    // The collection of commands to execute
    repeated FeatureCommand commands = 2;
    // The transaction reference
    TransactionRef transaction = 3;
}

// An operation response for an UpdateFeatures request
message UpdateFeaturesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    repeated PropertyValue result = 2;
}

// An operation request to update features in a Feature Source
message UpdateMatchingFeaturesRequest {
    // The feature source ID
    ResourceIdentifier feature_source = 1;
    // The FDO class name
    string class_name = 2;
    // The collection of properties to update with
    repeated PropertyValue properties = 3;
    // The FDO filter
    string filter = 4;
}

// An operation response for a UpdateMatchingFeatures request
message UpdateMatchingFeaturesResponse {
    // An error if one was raised by the service operation
    Error error = 1;
    // The result of the operation
    int32 result = 2;
}